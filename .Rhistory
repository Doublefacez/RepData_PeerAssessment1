geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps))+
facet_wrap(day, nrow = 2)+
geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps))+
facet_wrap(day, nrow = 2)+
geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps))+
facet_wrap(~day, nrow = 2)+
geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps))+
facet_wrap(day~, nrow = 2)+
geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps))+
facet_wrap(~day, nrow = 2)+
geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps), xlab = "t minutes interval")+
facet_wrap(~day, nrow = 2)+
geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins interval", y = "Average number of steps")
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins interval", y = "Average number of steps")+
facet_wrap(~day, nrow = 2)+
geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
facet_wrap(~day, nrow = 2)+
geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(legend.title.align = 0.5)
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(legend.title.align = 0.5)+
facet_wrap(~day, nrow = 2)+
geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(legend.title.align = 0.5)+
facet_wrap(~day, nrow = 2)+
geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(title = 0.5)+
facet_wrap(~day, nrow = 2)+
geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(title = 0.5)+
facet_wrap(~day, nrow = 2)+
geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(legend.title =  = 0.5)+
facet_wrap(~day, nrow = 2)+
geom_line()
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~day, nrow = 2)+
geom_line()
#Question 1 Calculate the total number of steps taken per day
total_step <- sum(data$steps, na.rm = TRUE)
#Question 2 Histogram of the total number of steps taken each day
total_step <- data %>%
group_by(date)%>%
summarise(sum_each_day = sum(steps, na.rm=TRUE))
hist(total_step$sum_each_day, xlab = "Total number of steps each day", main = "Histogram of steps perday")
clean <- filter(data, !is.na(steps))
clean
tidy <- aggregate(steps~interval, clean, mean)
tidy
plot(tidy$interval, tidy$steps, type = "l", xlab = "Time", ylab = "Steps", main = "Average steps per time interval")
#Question 5
str(tidy)
tidy2<- tidy%>%
rename(Time_interval = interval)
max_step <- filter(tidy, steps==max(steps))
max_step
miss <- sum(is.na(data))
miss
data_fill <- data %>%
mutate(steps = case_when(is.na(steps) ~ tidy$steps[match(
data$interval, tidy$interval)], TRUE ~ as.numeric(steps)
))
data_fill
data_fill_sum <- data_fill%>%
group_by(date)%>%
summarise(sum = sum(steps))
data_fill_sum
hist(data_fill_sum$sum, xlab = "Total number of steps each day",
main = "Historgram of total number of steps each day", breaks = 10)
mean_fill_step <- mean(data_fill_sum$sum, na.rm = TRUE)
median_fill_step <- median(data_fill_sum$sum, na.rm = TRUE)
mean_dif <- mean_fill_step - mean_t_step
mean_dif
median_dif <- median_fill_step - median_t_step
median_dif
data_fill_date <- data_fill
data_fill_date$date <- wday(ymd(data_fill_date$date))
day <- data_fill_date %>%
mutate(date = ymd(date),
day = case_when(wday(date)%in% 2:6 ~ "Weekday",
wday(date) %in% c(1,7) ~ "Weekend")
)
colnames(day)
mean_by_day <- day%>%
group_by(interval, day)%>%
summarise(steps = mean(steps))
mean_by_day
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~day, nrow = 2)+
geom_line()
str(data)
#Question 2 Histogram of the total number of steps taken each day
total_step <- data %>%
group_by(date)%>%
summarise(sum_each_day = sum(steps, na.rm=TRUE))
hist(total_step$sum_each_day, xlab = "Total number of steps each day", main = "Histogram of steps perday")
str(tidy)
tidy2<- tidy%>%
rename(Time_interval = interval)
max_step <- filter(tidy, steps==max(steps))
max_step
max_step <- filter(tidy, steps==max(steps))
max_step
#Question 6  Calculate and report the total number of missing values in the dataset
str(tidy)
tidy2<- tidy%>%
rename(Time_interval = interval)
max_step <- filter(tidy, steps==max(steps))
max_step
str(tidy)
tidy2<- tidy%>%
rename(Time_interval = interval)
# Week 2 Peer review assessment
library(dplyr)
library(lubridate)
library(ggplot2)
#Question 5
str(tidy)
tidy2<- tidy%>%
rename(Time_interval = interval)
max_step <- filter(tidy, steps==max(steps))
max_step
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(ggplot2)
total_step <- data %>%
group_by(date)%>%
summarise(sum_each_day = sum(steps, na.rm=TRUE))
# Week 2 Peer review assessment
library(dplyr)
library(lubridate)
library(ggplot2)
total_step <- data %>%
group_by(date)%>%
summarise(sum_each_day = sum(steps, na.rm=TRUE))
total_step <- data %>%
group_by(date)%>%
summarise(sum_each_day = sum(steps, na.rm=TRUE))
total_step <- data %>%
group_by(date)%>%
summarise(sum_each_day = sum(steps, na.rm=TRUE))
total_step <- data %>%
group_by(date)%>%
summarise(sum_each_day = sum(steps, na.rm=TRUE))
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("activity.csv", header = TRUE)
head(data)
nrow(data)
str(data)
library(dplyr)
library(lubridate)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("activity.csv", header = TRUE)
head(data)
nrow(data)
str(data)
library(dplyr)
library(lubridate)
library(ggplot2)
total_step <- data %>%
group_by(date)%>%
summarise(sum_each_day = sum(steps, na.rm=TRUE))
#Question 2 Histogram of the total number of steps taken each day
total_step <- data %>%
group_by(date)%>%
summarise(sum_each_day = sum(steps, na.rm=TRUE))
# Week 2 Peer review assessment
library(dplyr)
library(lubridate)
library(ggplot2)
#Question 1 Calculate the total number of steps taken per day
total_step <- sum(data$steps, na.rm = TRUE)
#Question 2 Histogram of the total number of steps taken each day
total_step <- data %>%
group_by(date)%>%
summarise(sum_each_day = sum(steps, na.rm=TRUE))
hist(total_step$sum_each_day, xlab = "Total number of steps each day", main = "Histogram of steps perday")
knitr::opts_chunk$set(echo = TRUE)
```{r daily_steps, cache=TRUE}
# Week 2 Peer review assessment
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(ggplot2)
mean_by_day
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~day, nrow = 2)+
geom_line()
# Week 2 Peer review assessment
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE)
head(data)
nrow(data)
str(data)
#Question 1 Calculate the total number of steps taken per day
total_step <- sum(data$steps, na.rm = TRUE)
#Question 2 Histogram of the total number of steps taken each day
total_step <- data %>%
group_by(date)%>%
summarise(sum_each_day = sum(steps, na.rm=TRUE))
hist(total_step$sum_each_day, xlab = "Total number of steps each day", main = "Histogram of steps perday")
#Question 3 Calculatethe mean and median of the total number of steps taken per day
mean_t_step <- mean(total_step$sum_each_day, na.rm = TRUE)
median_t_step <- median(total_step$sum_each_day, na.rm = TRUE)
mean_t_step
median_t_step
clean <- filter(data, !is.na(steps))
clean
tidy <- aggregate(steps~interval, clean, mean)
tidy
plot(tidy$interval, tidy$steps, type = "l", xlab = "Time", ylab = "Steps", main = "Average steps per time interval")
#Question 5
str(tidy)
tidy2<- tidy%>%
rename(Time_interval = interval)
max_step <- filter(tidy, steps==max(steps))
max_step
miss <- sum(is.na(data))
miss
data_fill <- data %>%
mutate(steps = case_when(is.na(steps) ~ tidy$steps[match(
data$interval, tidy$interval)], TRUE ~ as.numeric(steps)
))
data_fill
data_fill_sum <- data_fill%>%
group_by(date)%>%
summarise(sum = sum(steps))
data_fill_sum
hist(data_fill_sum$sum, xlab = "Total number of steps each day",
main = "Historgram of total number of steps each day", breaks = 10)
mean_fill_step <- mean(data_fill_sum$sum, na.rm = TRUE)
median_fill_step <- median(data_fill_sum$sum, na.rm = TRUE)
mean_dif <- mean_fill_step - mean_t_step
mean_dif
median_dif <- median_fill_step - median_t_step
median_dif
data_fill_date <- data_fill
data_fill_date$date <- wday(ymd(data_fill_date$date))
day <- data_fill_date %>%
mutate(date = ymd(date),
day = case_when(wday(date)%in% 2:6 ~ "Weekday",
wday(date) %in% c(1,7) ~ "Weekend")
)
colnames(day)
mean_by_day <- day%>%
group_by(interval, day)%>%
summarise(steps = mean(steps))
mean_by_day
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~day, nrow = 2)+
geom_line()
knit2html()
knit2html()
library(knitr)
knit2html()
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~day, nrow = 2)+
geom_line()
# Week 2 Peer review assessment
library(dplyr)
library(lubridate)
library(ggplot2)
library(knitr)
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~day, nrow = 2)+
geom_line()
data <- read.csv("activity.csv", header = TRUE)
head(data)
nrow(data)
str(data)
#Question 1 Calculate the total number of steps taken per day
total_step <- sum(data$steps, na.rm = TRUE)
#Question 2 Histogram of the total number of steps taken each day
total_step <- data %>%
group_by(date)%>%
summarise(sum_each_day = sum(steps, na.rm=TRUE))
hist(total_step$sum_each_day, xlab = "Total number of steps each day", main = "Histogram of steps perday")
#Question 3 Calculatethe mean and median of the total number of steps taken per day
mean_t_step <- mean(total_step$sum_each_day, na.rm = TRUE)
median_t_step <- median(total_step$sum_each_day, na.rm = TRUE)
mean_t_step
median_t_step
clean <- filter(data, !is.na(steps))
clean
tidy <- aggregate(steps~interval, clean, mean)
tidy
plot(tidy$interval, tidy$steps, type = "l", xlab = "Time", ylab = "Steps", main = "Average steps per time interval")
#Question 5
str(tidy)
tidy2<- tidy%>%
rename(Time_interval = interval)
max_step <- filter(tidy, steps==max(steps))
max_step
miss <- sum(is.na(data))
miss
data_fill <- data %>%
mutate(steps = case_when(is.na(steps) ~ tidy$steps[match(
data$interval, tidy$interval)], TRUE ~ as.numeric(steps)
))
data_fill
data_fill_sum <- data_fill%>%
group_by(date)%>%
summarise(sum = sum(steps))
data_fill_sum
hist(data_fill_sum$sum, xlab = "Total number of steps each day",
main = "Historgram of total number of steps each day", breaks = 10)
mean_fill_step <- mean(data_fill_sum$sum, na.rm = TRUE)
median_fill_step <- median(data_fill_sum$sum, na.rm = TRUE)
mean_dif <- mean_fill_step - mean_t_step
mean_dif
median_dif <- median_fill_step - median_t_step
median_dif
data_fill_date <- data_fill
data_fill_date$date <- wday(ymd(data_fill_date$date))
day <- data_fill_date %>%
mutate(date = ymd(date),
day = case_when(wday(date)%in% 2:6 ~ "Weekday",
wday(date) %in% c(1,7) ~ "Weekend")
)
colnames(day)
mean_by_day <- day%>%
group_by(interval, day)%>%
summarise(steps = mean(steps))
mean_by_day
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~day, nrow = 2)+
geom_line()
day <- data_fill_date %>%
mutate(date = ymd(date),
day = case_when(wday(date)%in% 2:6 ~ "Weekday",
wday(date) %in% c(1,7) ~ "Weekend")
)
# Week 2 Peer review assessment
library(dplyr)
day <- data_fill_date %>%
mutate(date = ymd(date),
day = case_when(wday(date)%in% 2:6 ~ "Weekday",
wday(date) %in% c(1,7) ~ "Weekend")
)
data_fill_date <- data_fill
data_fill_date$date <- wday(ymd(data_fill_date$date))
day <- data_fill_date %>%
mutate(date = ymd(date),
day = case_when(wday(date)%in% 2:6 ~ "Weekday",
wday(date) %in% c(1,7) ~ "Weekend")
)
colnames(day)
mean_by_day <- day%>%
group_by(interval, day)%>%
summarise(steps = mean(steps))
mean_by_day
data <- read.csv("activity.csv", header = TRUE)
head(data)
nrow(data)
str(data)
#Question 1 Calculate the total number of steps taken per day
total_step <- sum(data$steps, na.rm = TRUE)
#Question 2 Histogram of the total number of steps taken each day
total_step <- data %>%
group_by(date)%>%
summarise(sum_each_day = sum(steps, na.rm=TRUE))
hist(total_step$sum_each_day, xlab = "Total number of steps each day", main = "Histogram of steps perday")
#Question 3 Calculatethe mean and median of the total number of steps taken per day
mean_t_step <- mean(total_step$sum_each_day, na.rm = TRUE)
median_t_step <- median(total_step$sum_each_day, na.rm = TRUE)
mean_t_step
median_t_step
clean <- filter(data, !is.na(steps))
clean
tidy <- aggregate(steps~interval, clean, mean)
tidy
plot(tidy$interval, tidy$steps, type = "l", xlab = "Time", ylab = "Steps", main = "Average steps per time interval")
#Question 5
str(tidy)
tidy2<- tidy%>%
rename(Time_interval = interval)
max_step <- filter(tidy, steps==max(steps))
max_step
miss <- sum(is.na(data))
miss
data_fill <- data %>%
mutate(steps = case_when(is.na(steps) ~ tidy$steps[match(
data$interval, tidy$interval)], TRUE ~ as.numeric(steps)
))
data_fill
data_fill_sum <- data_fill%>%
group_by(date)%>%
summarise(sum = sum(steps))
data_fill_sum
hist(data_fill_sum$sum, xlab = "Total number of steps each day",
main = "Historgram of total number of steps each day", breaks = 10)
mean_fill_step <- mean(data_fill_sum$sum, na.rm = TRUE)
median_fill_step <- median(data_fill_sum$sum, na.rm = TRUE)
mean_dif <- mean_fill_step - mean_t_step
mean_dif
median_dif <- median_fill_step - median_t_step
median_dif
data_fill_date <- data_fill
data_fill_date$date <- wday(ymd(data_fill_date$date))
day <- data_fill_date %>%
mutate(date = ymd(date),
day = case_when(wday(date)%in% 2:6 ~ "Weekday",
wday(date) %in% c(1,7) ~ "Weekend")
)
colnames(day)
mean_by_day <- day%>%
group_by(interval, day)%>%
summarise(steps = mean(steps))
mean_by_day
data_fill_date <- data_fill
data_fill_date$date <- wday(ymd(data_fill_date$date))
day <- data_fill_date %>%
mutate(date = ymd(date),
day = case_when(wday(date)%in% 2:6 ~ "Weekday",
wday(date) %in% c(1,7) ~ "Weekend")
)
data_fill_date <- data_fill
day <- data_fill_date %>%
mutate(date = ymd(date),
day = case_when(wday(date)%in% 2:6 ~ "Weekday",
wday(date) %in% c(1,7) ~ "Weekend")
)
mean_by_day <- day%>%
group_by(interval, day)%>%
summarise(steps = mean(steps))
mean_by_day
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~day, nrow = 2)+
geom_line()
knitr::opts_chunk$set(echo = TRUE)
data_fill_date <- data_fill
day <- data_fill_date %>%
mutate(date = ymd(date),
day = case_when(wday(date)%in% 2:6 ~ "Weekday",
wday(date) %in% c(1,7) ~ "Weekend")
)
library(dplyr)
library(ggplot2)
library(knitr)
data_fill_date <- data_fill
day <- data_fill_date %>%
mutate(date = ymd(date),
day = case_when(wday(date)%in% 2:6 ~ "Weekday",
wday(date) %in% c(1,7) ~ "Weekend")
)
mean_by_day <- day%>%
group_by(interval, day)%>%
summarise(steps = mean(steps))
mean_by_day
ggplot(mean_by_day, aes(x = interval, y = steps))+
labs(x = "Time (5 mins intervals)", y = "Average number of steps",
title = "Average number of steps every 5 mins on weekday and weekend")+
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~day, nrow = 2)+
geom_line()
